My system is "Ubuntu 22.04.3 LTS"

===================================================================
1- We create a fake virtual environment. so write in Terminal
pipenv install 


Output:
    Creating a virtualenv for this project...
    Pipfile: /home/sina/01-Repo/Tests/2_Django_Docker_with_PostgreSql/Pipfile
    Using default python from /usr/bin/python3 (3.10.12) to create virtualenv...
    ⠼ Creating virtual environment...created virtual environment CPython3.10.12.final.0-64 in 316ms
    creator CPython3Posix(dest=/home/sina/.local/share/virtualenvs/2_Django_Docker_with_PostgreSql-8ahpN8Lk, clear=False, no_vcs_ignore=False, global=False)
    seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/home/sina/.local/share/virtualenv)
        added seed packages: pip==23.3.2, setuptools==69.0.3, wheel==0.42.0
    activators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator

    ✔ Successfully created virtual environment!
    Virtualenv location: /home/sina/.local/share/virtualenvs/2_Django_Docker_with_PostgreSql-8ahpN8Lk
    requirements.txt found in /home/sina/01-Repo/Tests/2_Django_Docker_with_PostgreSql instead of Pipfile! Converting...
    ⠧ Importing requirements...WARNING:pipenv.patched.pip._vendor.urllib3.connectionpool:Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ReadTimeoutError("HTTPSConnectionPool(host='pypi.org', port=443): Read timed out. (read timeout=0.3)")': /pypi/asgiref/json
    ⠧ Importing requirements...WARNING:pipenv.patched.pip._vendor.urllib3.connectionpool:Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ReadTimeoutError("HTTPSConnectionPool(host='pypi.org', port=443): Read timed out. (read timeout=0.3)")': /pypi/django/json
    ⠧ Importing requirements...WARNING:pipenv.patched.pip._vendor.urllib3.connectionpool:Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ReadTimeoutError("HTTPSConnectionPool(host='pypi.org', port=443): Read timed out. (read timeout=0.3)")': /pypi/psycopg2-binary/json
    ⠇ Importing requirements...WARNING:pipenv.patched.pip._vendor.urllib3.connectionpool:Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ReadTimeoutError("HTTPSConnectionPool(host='pypi.org', port=443): Read timed out. (read timeout=0.3)")': /pypi/sqlparse/json
    ⠇ Importing requirements...WARNING:pipenv.patched.pip._vendor.urllib3.connectionpool:Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ReadTimeoutError("HTTPSConnectionPool(host='pypi.org', port=443): Read timed out. (read timeout=0.3)")': /pypi/tzdata/json
    ✔ Success!
    Warning: Your Pipfile now contains pinned versions, if your requirements.txt did. 
    We recommend updating your Pipfile to specify the "*" version, instead.
    Pipfile.lock not found, creating...
    Locking [packages] dependencies...
    Building requirements...
    Resolving dependencies...
    ✔ Success!
    Locking [dev-packages] dependencies...
    Updated Pipfile.lock (029405c39080737a27489b44f27ac147bc195047f9ad6f9994fb52d3c4022944)!
    Installing dependencies from Pipfile.lock (022944)...
    To activate this project's virtualenv, run pipenv shell.
    Alternatively, run a command inside the virtualenv with pipenv run.

===================================================================
2- press "Ctrl + Shift + P" key and write
python: select interpreter

===================================================================
3- Click on this
python3.10.12('2_Django_Docker_with_PostgreSql...')~/.local/... PipEnv

===================================================================
4- Write in Terminal in current directory project + (VPN must be activated)
docker compose up --build

Output: will be like this
    [+] Running 15/2
    ✔ db 14 layers [⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]      0B/0B      Pulled                                                                                                           384.6s 
                                                                                                                                                                            
    [+] Building 44.5s (11/11) FINISHED                                                                                                                      docker:rootless
    => [web internal] load build definition from Dockerfile                                                                                                            0.1s
    => => transferring dockerfile: 204B                                                                                                                                0.0s
    => [web internal] load .dockerignore                                                                                                                               0.1s
    => => transferring context: 2B                                                                                                                                     0.0s
    => [web internal] load metadata for docker.io/library/python:3.9                                                                                                   4.5s
    => [web auth] library/python:pull token for registry-1.docker.io                                                                                                   0.0s
    => [web 1/5] FROM docker.io/library/python:3.9@sha256:30678bb79d9eeaf98ec0ce83cdcd4d6f5301484ef86873a711e69df2ca77e8ac                                            16.0s
    => => resolve docker.io/library/python:3.9@sha256:30678bb79d9eeaf98ec0ce83cdcd4d6f5301484ef86873a711e69df2ca77e8ac                                                 0.1s
    => => sha256:30678bb79d9eeaf98ec0ce83cdcd4d6f5301484ef86873a711e69df2ca77e8ac 1.86kB / 1.86kB                                                                      0.0s
    => => sha256:edb6b76b75bad04bef16fec848f73e45c0b4522d77cf389baff429081157fa1a 7.51kB / 7.51kB                                                                      0.0s
    => => sha256:62072a293549fb69041a44936a3ea5cebcbc7195cc532e509fe940175b2f5430 2.01kB / 2.01kB                                                                      0.0s
    => => sha256:cd0903c43c21ba3625df928c05a81e32d2d5dc44214e326fafca1957dcdfbfba 15.82MB / 15.82MB                                                                   14.5s
    => => sha256:b85288e0cb16dfd5a0d717d65e0cba46d00c33ce88b772a2b06a5899f88ed0be 244B / 244B                                                                          2.0s
    => => sha256:7a97f6368ea64ce28aa5df12c8a292db5f729f0858dd112579938b295b0c861c 2.85MB / 2.85MB                                                                      5.4s
    => => extracting sha256:cd0903c43c21ba3625df928c05a81e32d2d5dc44214e326fafca1957dcdfbfba                                                                           0.3s
    => => extracting sha256:b85288e0cb16dfd5a0d717d65e0cba46d00c33ce88b772a2b06a5899f88ed0be                                                                           0.0s
    => => extracting sha256:7a97f6368ea64ce28aa5df12c8a292db5f729f0858dd112579938b295b0c861c                                                                           0.2s
    => [web internal] load build context                                                                                                                               0.1s
    => => transferring context: 53.94kB                                                                                                                                0.0s
    => [web 2/5] WORKDIR /code                                                                                                                                         0.1s
    => [web 3/5] COPY requirements.txt /code/                                                                                                                          0.1s
    => [web 4/5] RUN pip install -r requirements.txt                                                                                                                  21.5s
    => [web 5/5] COPY . /code/                                                                                                                                         0.2s
    => [web] exporting to image                                                                                                                                        1.9s 
    => => exporting layers                                                                                                                                             1.9s 
    => => writing image sha256:e7eeef5a259733618ba35e90ecc7780131ab69ff1be30660ac83cefb8399d80d                                                                        0.0s 
    => => naming to docker.io/library/2_django_docker_with_postgresql-web                                                                                              0.0s
    [+] Running 3/3
    ✔ Network 2_django_docker_with_postgresql_default  Created                                                                                                         0.1s 
    ✔ Container 2_django_docker_with_postgresql-db-1   Created                                                                                                         0.1s 
    ✔ Container 2_django_docker_with_postgresql-web-1  Created                                                                                                         0.1s 
    Attaching to 2_django_docker_with_postgresql-db-1, 2_django_docker_with_postgresql-web-1
    2_django_docker_with_postgresql-db-1   | ********************************************************************************
    2_django_docker_with_postgresql-db-1   | WARNING: POSTGRES_HOST_AUTH_METHOD has been set to "trust". This will allow
    2_django_docker_with_postgresql-db-1   |          anyone with access to the Postgres port to access your database without
    2_django_docker_with_postgresql-db-1   |          a password, even if POSTGRES_PASSWORD is set. See PostgreSQL
    2_django_docker_with_postgresql-db-1   |          documentation about "trust":
    2_django_docker_with_postgresql-db-1   |          https://www.postgresql.org/docs/current/auth-trust.html
    2_django_docker_with_postgresql-db-1   |          In Docker's default configuration, this is effectively any other
    2_django_docker_with_postgresql-db-1   |          container on the same system.
    2_django_docker_with_postgresql-db-1   | 
    2_django_docker_with_postgresql-db-1   |          It is not recommended to use POSTGRES_HOST_AUTH_METHOD=trust. Replace
    2_django_docker_with_postgresql-db-1   |          it with "-e POSTGRES_PASSWORD=password" instead to set a password in
    2_django_docker_with_postgresql-db-1   |          "docker run".
    2_django_docker_with_postgresql-db-1   | ********************************************************************************
    2_django_docker_with_postgresql-db-1   | The files belonging to this database system will be owned by user "postgres".
    2_django_docker_with_postgresql-db-1   | This user must also own the server process.
    2_django_docker_with_postgresql-db-1   | 
    2_django_docker_with_postgresql-db-1   | The database cluster will be initialized with locale "en_US.utf8".
    2_django_docker_with_postgresql-db-1   | The default database encoding has accordingly been set to "UTF8".
    2_django_docker_with_postgresql-db-1   | The default text search configuration will be set to "english".
    2_django_docker_with_postgresql-db-1   | 
    2_django_docker_with_postgresql-db-1   | Data page checksums are disabled.
    2_django_docker_with_postgresql-db-1   | 
    2_django_docker_with_postgresql-db-1   | fixing permissions on existing directory /var/lib/postgresql/data ... ok
    2_django_docker_with_postgresql-db-1   | creating subdirectories ... ok
    2_django_docker_with_postgresql-db-1   | selecting dynamic shared memory implementation ... posix
    2_django_docker_with_postgresql-db-1   | selecting default max_connections ... 100
    2_django_docker_with_postgresql-db-1   | selecting default shared_buffers ... 128MB
    2_django_docker_with_postgresql-db-1   | selecting default time zone ... Etc/UTC
    2_django_docker_with_postgresql-db-1   | creating configuration files ... ok
    2_django_docker_with_postgresql-db-1   | running bootstrap script ... ok
    2_django_docker_with_postgresql-db-1   | performing post-bootstrap initialization ... ok
    2_django_docker_with_postgresql-web-1  | Watching for file changes with StatReloader
    2_django_docker_with_postgresql-web-1  | Performing system checks...
    2_django_docker_with_postgresql-web-1  | 
    2_django_docker_with_postgresql-web-1  | System check identified no issues (0 silenced).
    2_django_docker_with_postgresql-web-1  | Exception in thread django-main-thread:
    2_django_docker_with_postgresql-web-1  | Traceback (most recent call last):
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 230, in ensure_connection
    2_django_docker_with_postgresql-web-1  |     self.connect()
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/asyncio.py", line 25, in inner
    2_django_docker_with_postgresql-web-1  |     return func(*args, **kwargs)
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 211, in connect
    2_django_docker_with_postgresql-web-1  |     self.connection = self.get_new_connection(conn_params)
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/asyncio.py", line 25, in inner
    2_django_docker_with_postgresql-web-1  |     return func(*args, **kwargs)
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/postgresql/base.py", line 199, in get_new_connection
    2_django_docker_with_postgresql-web-1  |     connection = Database.connect(**conn_params)
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/psycopg2/__init__.py", line 122, in connect
    2_django_docker_with_postgresql-web-1  |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
    2_django_docker_with_postgresql-web-1  | psycopg2.OperationalError: connection to server at "db" (172.20.0.2), port 5432 failed: Connection refused
    2_django_docker_with_postgresql-web-1  |        Is the server running on that host and accepting TCP/IP connections?
    2_django_docker_with_postgresql-web-1  | 
    2_django_docker_with_postgresql-web-1  | 
    2_django_docker_with_postgresql-web-1  | The above exception was the direct cause of the following exception:
    2_django_docker_with_postgresql-web-1  | 
    2_django_docker_with_postgresql-web-1  | Traceback (most recent call last):
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/threading.py", line 980, in _bootstrap_inner
    2_django_docker_with_postgresql-web-1  |     self.run()
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/threading.py", line 917, in run
    2_django_docker_with_postgresql-web-1  |     self._target(*self._args, **self._kwargs)
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/autoreload.py", line 64, in wrapper
    2_django_docker_with_postgresql-web-1  |     fn(*args, **kwargs)
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/core/management/commands/runserver.py", line 127, in inner_run
    2_django_docker_with_postgresql-web-1  |     self.check_migrations()
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/core/management/base.py", line 505, in check_migrations
    2_django_docker_with_postgresql-web-1  |     executor = MigrationExecutor(connections[DEFAULT_DB_ALIAS])
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/db/migrations/executor.py", line 18, in __init__
    2_django_docker_with_postgresql-web-1  |     self.loader = MigrationLoader(self.connection)
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/db/migrations/loader.py", line 53, in __init__
    2_django_docker_with_postgresql-web-1  |     self.build_graph()
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/db/migrations/loader.py", line 223, in build_graph
    2_django_docker_with_postgresql-web-1  |     self.applied_migrations = recorder.applied_migrations()
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/db/migrations/recorder.py", line 77, in applied_migrations
    2_django_docker_with_postgresql-web-1  |     if self.has_table():
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/db/migrations/recorder.py", line 55, in has_table
    2_django_docker_with_postgresql-web-1  |     with self.connection.cursor() as cursor:
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/asyncio.py", line 25, in inner
    2_django_docker_with_postgresql-web-1  |     return func(*args, **kwargs)
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 270, in cursor
    2_django_docker_with_postgresql-web-1  |     return self._cursor()
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 246, in _cursor
    2_django_docker_with_postgresql-web-1  |     self.ensure_connection()
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/asyncio.py", line 25, in inner
    2_django_docker_with_postgresql-web-1  |     return func(*args, **kwargs)
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 230, in ensure_connection
    2_django_docker_with_postgresql-web-1  |     self.connect()
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/db/utils.py", line 90, in __exit__
    2_django_docker_with_postgresql-web-1  |     raise dj_exc_value.with_traceback(traceback) from exc_value
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 230, in ensure_connection
    2_django_docker_with_postgresql-web-1  |     self.connect()
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/asyncio.py", line 25, in inner
    2_django_docker_with_postgresql-web-1  |     return func(*args, **kwargs)
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 211, in connect
    2_django_docker_with_postgresql-web-1  |     self.connection = self.get_new_connection(conn_params)
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/asyncio.py", line 25, in inner
    2_django_docker_with_postgresql-web-1  |     return func(*args, **kwargs)
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/postgresql/base.py", line 199, in get_new_connection
    2_django_docker_with_postgresql-web-1  |     connection = Database.connect(**conn_params)
    2_django_docker_with_postgresql-web-1  |   File "/usr/local/lib/python3.9/site-packages/psycopg2/__init__.py", line 122, in connect
    2_django_docker_with_postgresql-web-1  |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
    2_django_docker_with_postgresql-web-1  | django.db.utils.OperationalError: connection to server at "db" (172.20.0.2), port 5432 failed: Connection refused
    2_django_docker_with_postgresql-web-1  |        Is the server running on that host and accepting TCP/IP connections?
    2_django_docker_with_postgresql-web-1  | 
    2_django_docker_with_postgresql-db-1   | initdb: warning: enabling "trust" authentication for local connections
    2_django_docker_with_postgresql-db-1   | You can change this by editing pg_hba.conf or using the option -A, or
    2_django_docker_with_postgresql-db-1   | --auth-local and --auth-host, the next time you run initdb.
    2_django_docker_with_postgresql-db-1   | syncing data to disk ... ok
    2_django_docker_with_postgresql-db-1   | 
    2_django_docker_with_postgresql-db-1   | 
    2_django_docker_with_postgresql-db-1   | Success. You can now start the database server using:
    2_django_docker_with_postgresql-db-1   | 
    2_django_docker_with_postgresql-db-1   |     pg_ctl -D /var/lib/postgresql/data -l logfile start
    2_django_docker_with_postgresql-db-1   | 
    2_django_docker_with_postgresql-db-1   | waiting for server to start....2023-12-26 10:39:51.094 UTC [49] LOG:  starting PostgreSQL 14.10 (Debian 14.10-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
    2_django_docker_with_postgresql-db-1   | 2023-12-26 10:39:51.101 UTC [49] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
    2_django_docker_with_postgresql-db-1   | 2023-12-26 10:39:51.127 UTC [50] LOG:  database system was shut down at 2023-12-26 10:39:49 UTC
    2_django_docker_with_postgresql-db-1   | 2023-12-26 10:39:51.138 UTC [49] LOG:  database system is ready to accept connections
    2_django_docker_with_postgresql-db-1   |  done
    2_django_docker_with_postgresql-db-1   | server started
    2_django_docker_with_postgresql-db-1   | 
    2_django_docker_with_postgresql-db-1   | /usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*
    2_django_docker_with_postgresql-db-1   | 
    2_django_docker_with_postgresql-db-1   | 2023-12-26 10:39:51.207 UTC [49] LOG:  received fast shutdown request
    2_django_docker_with_postgresql-db-1   | waiting for server to shut down....2023-12-26 10:39:51.214 UTC [49] LOG:  aborting any active transactions
    2_django_docker_with_postgresql-db-1   | 2023-12-26 10:39:51.216 UTC [49] LOG:  background worker "logical replication launcher" (PID 56) exited with exit code 1
    2_django_docker_with_postgresql-db-1   | 2023-12-26 10:39:51.216 UTC [51] LOG:  shutting down
    2_django_docker_with_postgresql-db-1   | 2023-12-26 10:39:51.259 UTC [49] LOG:  database system is shut down
    2_django_docker_with_postgresql-db-1   |  done
    2_django_docker_with_postgresql-db-1   | server stopped
    2_django_docker_with_postgresql-db-1   | 
    2_django_docker_with_postgresql-db-1   | PostgreSQL init process complete; ready for start up.
    2_django_docker_with_postgresql-db-1   | 
    2_django_docker_with_postgresql-db-1   | 2023-12-26 10:39:51.346 UTC [1] LOG:  starting PostgreSQL 14.10 (Debian 14.10-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
    2_django_docker_with_postgresql-db-1   | 2023-12-26 10:39:51.346 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
    2_django_docker_with_postgresql-db-1   | 2023-12-26 10:39:51.346 UTC [1] LOG:  listening on IPv6 address "::", port 5432
    2_django_docker_with_postgresql-db-1   | 2023-12-26 10:39:51.357 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
    2_django_docker_with_postgresql-db-1   | 2023-12-26 10:39:51.371 UTC [62] LOG:  database system was shut down at 2023-12-26 10:39:51 UTC
    2_django_docker_with_postgresql-db-1   | 2023-12-26 10:39:51.382 UTC [1] LOG:  database system is ready to accept connections

===================================================================
5- for Check images write in Terminal

5-1
docker images

Output:
    REPOSITORY                            TAG       IMAGE ID       CREATED              SIZE
    2_django_docker_with_postgresql-web   latest    e7eeef5a2597   About a minute ago   1.04GB

5-1
docker ps -a

Output:
    CONTAINER ID   IMAGE                                 COMMAND                  CREATED          STATUS                      PORTS     NAMES
    08ccf667d6f5   2_django_docker_with_postgresql-web   "python /code/manage…"   16 minutes ago   Exited (0) 12 minutes ago             2_django_docker_with_postgresql-web-1
    17c267474e1b   postgres:14                           "docker-entrypoint.s…"   16 minutes ago   Exited (0) 12 minutes ago             2_django_docker_with_postgresql-db-1

===================================================================
6- Install this Extensions from .vscode/extensions.json
{
    "recommendations": [
        "beardedbear.beardedicons",
        "beardedbear.beardedtheme",
        "ms-python.black-formatter",
        "streetsidesoftware.code-spell-checker",
        "ms-azuretools.vscode-docker",
        "editorconfig.editorconfig",
        "mongodb.mongodb-vscode",
        "ms-python.python",
        "davidanson.vscode-markdownlint"
    ]
} 
************************************************************************************
************************************************************************************
************************************************************************************
************************************************************************************
                     ATTENTION: We don't migrate yet
************************************************************************************
************************************************************************************
************************************************************************************
************************************************************************************
===================================================================
7- Write in another Terminal +(web container should be started ) if was stop, write -> docker start 2_django_docker_with_postgresql-web-1
docker compose exec web python manage.py startapp accounts

Output:
    accounts directory will create in current directory

===================================================================
8- add this to config/settings.py > INSTALLED_APP = ['accounts',]
...
'accounts',

===================================================================
9- import this to accounts/models.py
from django.contrib.auth.models import AbstractUser
===================================================================
10- Create new class in accounts/models.py

class CustomUser(AbstractUser):
    pass

===================================================================
11- create this file in accounts
forms.py

===================================================================
12- import these to accounts/forms.py
from django.contrib.auth.forms import UserCreationForm
from django.contrib.auth.forms import UserChangeForm
from django.contrib.auth import get_user_model

===================================================================
13- create this class in accounts/forms.py

class CustomUserCreationForm(UserCreationForm):
    class Meta:
        model = get_user_model()
        fields = ('email', 'username',  )

===================================================================
14- add this to end of config/settings.py
...
# Accounts config
AUTH_USER_MODEL = 'accounts.CustomUser'

===================================================================
15- create this class in accounts/forms.py
...
class CustomUserChangeForm(UserChangeForm):
    class Meta:
        model = get_user_model()
        fields = ('email', 'username',  )

===================================================================
16- import this to accounts/admin.py
from django.contrib.auth.admin import UserAdmin

===================================================================
17- import this in accounts/admin.py
from .models import CustomUser

===================================================================
18- Create this class in accounts/admin.py
class CustomUserAdmin(UserAdmin):
    model = CustomUser

===================================================================
19- import these in accounts/admin.py
from .forms import CustomUserCreationForm
from .forms import CustomUserChangeForm

===================================================================
20- add these into class CustomUserAdmin in accounts/admin.py
class CustomUserAdmin(UserAdmin):
    ...
    add_form = CustomUserCreationForm
    form = CustomUserChangeForm
    list_display = ('email', 'username',  )
    
===================================================================
21- add this above CustomUserAdmin class in accounts/admin.py
@admin.register(CustomUser)
class CustomUserAdmin(UserAdmin):
    ...

************************************************************************************
************************************************************************************
************************************************************************************
************************************************************************************
                          NOW We Migrate for Database
************************************************************************************
************************************************************************************
************************************************************************************
************************************************************************************

===================================================================
22- in Terminal write this for make migrations +(your web container should be start before this command)
docker compose exec web python manage.py makemigrations 

Ouput: Like this 
    /usr/local/lib/python3.9/site-packages/django/core/management/commands/makemigrations.py:105: RuntimeWarning: Got an error checking a consistent migration history performed for database connection 'default': could not translate host name "db" to address: Temporary failure in name resolution

    warnings.warn(
    Migrations for 'accounts':
    accounts/migrations/0001_initial.py
        - Create model CustomUser

===================================================================
23- in Terminal sure that Database container is running by this command, maybe your database name is different than me
docker start 2_django_docker_with_postgresql-db-1

Output: like this
    2_django_docker_with_postgresql-db-1

===================================================================
24- in Terminal write this for make migrations +(your web container should be start before this command)
docker compose exec web python manage.py migrate 

Output:
    Operations to perform:
      Apply all migrations: accounts, admin, auth, contenttypes, sessions
    Running migrations:
      Applying contenttypes.0001_initial... OK
      Applying contenttypes.0002_remove_content_type_name... OK
      Applying auth.0001_initial... OK
      Applying auth.0002_alter_permission_name_max_length... OK
      Applying auth.0003_alter_user_email_max_length... OK
      Applying auth.0004_alter_user_username_opts... OK
      Applying auth.0005_alter_user_last_login_null... OK
      Applying auth.0006_require_contenttypes_0002... OK
      Applying auth.0007_alter_validators_add_error_messages... OK
      Applying auth.0008_alter_user_username_max_length... OK
      Applying auth.0009_alter_user_last_name_max_length... OK
      Applying auth.0010_alter_group_name_max_length... OK
      Applying auth.0011_update_proxy_permissions... OK
      Applying auth.0012_alter_user_first_name_max_length... OK
      Applying accounts.0001_initial... OK
      Applying admin.0001_initial... OK
      Applying admin.0002_logentry_remove_auto_add... OK
      Applying admin.0003_logentry_add_action_flag_choices... OK
      Applying sessions.0001_initial... OK

===================================================================
25- Write in Terminal, Thank create simple username and password for development mode. I use user=sina pass=123
docker compose exec web python manage.py createsuperuser

Ouput:
    Username:
    Email address: 
    Password: 
    Password (again): 
    This password is too short. It must contain at least 8 characters.
    This password is too common.
    This password is entirely numeric.
    Bypass password validation and create user anyway? [y/N]: y
    Superuser created successfully.

===================================================================
26- Write in Terminal (If are in Iran run VPN!)
docker compose up

===================================================================
21- check this link, will be shows 
http://127.0.0.1:8000/admin/login/?next=/admin/

===================================================================
22- Check this link, should be shows email and username
http://127.0.0.1:8000/admin/accounts/customuser/

===================================================================
23- Write in Terminal  
docker compose exec web python manage.py startapp pages

===================================================================
24- Add this app to config/settings.py > INSTALLED_APP 
'pages',

===================================================================
25- import this to pages/views.py
from django.views.generic import TemplateView

===================================================================
26- Create these two classes in pages/views.py
class HomePageView(TemplateView):
    template_name = 'home.html'


class AboutUsPageView(TemplateView):
    template_name = 'pages/aboutus.html'


===================================================================
27- Create this directories nested
templates/home.html


===================================================================
28- add this in config/settings.py 
TEMPLATES = [
...
        'DIRS': [str(BASE_DIR.joinpath('templates'))],
...
]

===================================================================
29- create in pages > templates/pages/aboutus.html
templates/pages/aboutus.html

===================================================================
30- import this into config/urls.py
from django.urls import include

===================================================================
31- add this into urlpatterns > config/urls.py
urlpatterns = [
    ...
    path('', include('pages.urls')),
]

===================================================================
32- create urls.py file in pages directory
urls.py

===================================================================
33- import this in pages/urls.py
from django.urls import path

===================================================================
34- add these into urlpatterns into pages/urls.py
urlpatterns = [
    path('', views.HomePageView.as_view(), name='home'),
    path('aboutus/', views.AboutUsPageView.as_view(), name='aboutus'),
]

===================================================================
35- import internal views.py into pages/urls.py
from . import views

===================================================================
36- Check these links and should be shows you wrote in home.html and aboutus.html
http://127.0.0.1:8000/
http://127.0.0.1:8000/aboutus

===================================================================
37- add this path to config/urls.py > urlpatterns
path('accounts/', include('django.contrib.auth.urls')),
path('accounts/', include('accounts.urls'))

===================================================================
38- Create urls.py in accounts directory
urls.py

===================================================================
39- import this in accounts/urls.py
from django.urls import path

from . import views

===================================================================
40- add urlpatterns in accounts/urls.py
urlpatterns = [
    path('signup/', views.SignUpView.as_view(), name='signup'),
]

===================================================================
41- import this in accounts/views.py
from django.views.generic import CreateView
from django.urls import reverse_lazy

from .forms import CustomUserCreationForm

===================================================================
42- create new class for handle view in accounts/views.py
class SignUpView(CreateView):
    form_class = CustomUserCreationForm
    template_name = 'registration/signup.html'
    success_url = reverse_lazy('login')

    
===================================================================
43- Create this in templates directory
registration/signup.html

===================================================================
44-add this in templates/registration/signup.html
<form action="" method="post">
    {% csrf_token %}
    {{ form.as_p }}
    <input type="submit" value="Signup" >
</form>

===================================================================
45- Create login.html in templates/registration directory
login.html

===================================================================
46- add this in templates/registration/login.html
<form action="" method="post">
    {% csrf_token %}
    {{ form.as_p }}
    <input type="submit" value="Login" >
</form>

===================================================================
47- Check site , write in Terminal , check these links should be work
docker compose up

http://127.0.0.1:8000/accounts/signup/
http://127.0.0.1:8000/accounts/login/

===================================================================
48- add these in enf of config/settings.py
# for user , Redirect to another url
LOGIN_REDIRECT_URL =  'home'
LOGOUT_REDIRECT_URL = 'home'


===================================================================
49- restart server by stop docker compose and retype thi command in Terminal
docker compose up

===================================================================
50- Check these links after signup and logout 
http://127.0.0.1:8000/accounts/login/
http://127.0.0.1:8000/accounts/logout/

Result should be > go to home page 

===================================================================
51- first be sure docker compose in run by this in Terminal
docker compose up

===================================================================
52- write this in Terminal
docker compose exec web pip install django-crispy-forms

Output will be like this:
    Collecting django-crispy-forms
      WARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ConnectTimeoutError(<pip._vendor.urllib3.connection.HTTPSConnection object at 0x7f09d0eaf670>, 'Connection to files.pythonhosted.org timed out. (connect timeout=15)')': /packages/58/b4/0fc9eed10828d538b0706e64ec3b8c32e42539ba9c6245d17ad4a3873163/django_crispy_forms-2.1-py3-none-any.whl
      Downloading django_crispy_forms-2.1-py3-none-any.whl (31 kB)
    Collecting django>=4.2
      Downloading Django-4.2.8-py3-none-any.whl (8.0 MB)
        ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 8.0/8.0 MB 278.9 kB/s eta 0:00:00
    Collecting asgiref<4,>=3.6.0
      Downloading asgiref-3.7.2-py3-none-any.whl (24 kB)
    Requirement already satisfied: sqlparse>=0.3.1 in /usr/local/lib/python3.9/site-packages (from django>=4.2->django-crispy-forms) (0.4.2)
    Collecting typing-extensions>=4
      Downloading typing_extensions-4.9.0-py3-none-any.whl (32 kB)
    Installing collected packages: typing-extensions, asgiref, django, django-crispy-forms
      Attempting uninstall: asgiref
        Found existing installation: asgiref 3.5.0
        Uninstalling asgiref-3.5.0:
          Successfully uninstalled asgiref-3.5.0
      Attempting uninstall: django
        Found existing installation: Django 4.0.2
        Uninstalling Django-4.0.2:
          Successfully uninstalled Django-4.0.2

===================================================================
53-
===================================================================
54-
===================================================================
55-
===================================================================
56-
===================================================================
57-
===================================================================
58-
===================================================================
59-
===================================================================
60-
===================================================================
61-
===================================================================
62-
===================================================================
63-
===================================================================
64-
===================================================================
65-
===================================================================
66-
===================================================================
67-
===================================================================
68-
===================================================================
69-
===================================================================
70-
===================================================================
71



